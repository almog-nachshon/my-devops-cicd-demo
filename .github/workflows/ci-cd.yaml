# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

# Trigger on version tags for dev, test, prod
on:
  push:
    tags:
      - 'v*'

jobs:
  build_push_and_deploy:
    if: startsWith(github.ref, 'refs/tags/v') && (github.ref_name =~ '^v[0-9]+\.[0-9]+\.[0-9]+-(dev|test|prod)$')
    runs-on: ubuntu-latest
    permissions:
      id-token: write         # allows OIDC
      contents: read          # for checkout
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract tag & environment
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "IMAGE_TAG=$TAG" >> $GITHUB_OUTPUT
          case "$TAG" in
            *-dev) ENV=dev ;; 
            *-test) ENV=test ;; 
            *-prod) ENV=prod ;; 
          esac
          echo "ENV=$ENV" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::485701710361:role/GitHubActionsRole
          aws-region: eu-north-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker image from app/
        run: |
          cd app
          IMAGE=485701710361.dkr.ecr.eu-north-1.amazonaws.com/my-devops-cicd-demo:${{ steps.vars.outputs.IMAGE_TAG }}
          docker build -t $IMAGE . # uses app/Dockerfile & .dockerignore
          docker push $IMAGE



      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name demo-eks-production --region eu-north-1

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Deploy Helm chart to ${{ steps.vars.outputs.ENV }}
        run: |
          ENV=${{ steps.vars.outputs.ENV }}
          IMAGE_TAG=${{ steps.vars.outputs.IMAGE_TAG }}
          helm upgrade --install hello-world-$ENV ./helmchert \
            --namespace $ENV --create-namespace \
            -f ./helmchert/values-$ENV.yaml \
            --set image.tag=$IMAGE_TAG
